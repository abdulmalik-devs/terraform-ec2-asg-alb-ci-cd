name: Terraform CI/CD

on:
  push:
    branches:
      - dev-branch

  pull_request:
    types: [closed]
    branches:
      - main
      - ops-branch
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.9
      - name: Format Terraform code
        working-directory: ./
        run: terraform fmt

  plan:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev-branch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0
    - name: Terraform init
      working-directory: ./
      run: terraform init
    - name: Terraform Plan
      working-directory: ./
      run: terraform plan


  # pull-request-to-main:
  #   needs: plan
  #   if: github.ref == 'refs/heads/dev-branch'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Create Pull Request
  #     uses: peter-evans/create-pull-request@v3.7.0
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       commit-message: "Automated Pull Request from dev-branch"
  #       branch: dev-branch
  #       title: "Automated Pull Request from dev-branch"
  #       body: "Automated Pull Request from dev-branch"
  #       base: main

  apply:
    needs: plan
    if: github.ref == 'main' &&
        github.event.pull_request.merged == true   
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0
    - name: Terraform Apply
      working-directory: ./
      run: terraform apply -auto-approve

  # pull-request-to-ops-branch:
  #   needs: apply
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Create Pull Request
  #     uses: peter-evans/create-pull-request@v3.7.0
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       commit-message: "Automated Pull Request from main"
  #       branch: ops-branch
  #       title: "Automated Pull Request from main"
  #       body: "Automated Pull Request from main"
  #       base: ops-branch

  destroy:
    needs: apply
    if: github.ref == 'refs/heads/ops-branch'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0
    - name: Terraform Destroy
      working-directory: ./
      run: terraform destroy -auto-approve